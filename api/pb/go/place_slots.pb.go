// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: place_slots.proto

package plantmanager

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetPlaceSlotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	JWT string `protobuf:"bytes,2,opt,name=JWT,proto3" json:"JWT,omitempty"`
}

func (x *GetPlaceSlotRequest) Reset() {
	*x = GetPlaceSlotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_place_slots_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaceSlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaceSlotRequest) ProtoMessage() {}

func (x *GetPlaceSlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_place_slots_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaceSlotRequest.ProtoReflect.Descriptor instead.
func (*GetPlaceSlotRequest) Descriptor() ([]byte, []int) {
	return file_place_slots_proto_rawDescGZIP(), []int{0}
}

func (x *GetPlaceSlotRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetPlaceSlotRequest) GetJWT() string {
	if x != nil {
		return x.JWT
	}
	return ""
}

type GetPlaceSlotReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaceSlot *PlaceSlot `protobuf:"bytes,1,opt,name=placeSlot,proto3" json:"placeSlot,omitempty"`
}

func (x *GetPlaceSlotReply) Reset() {
	*x = GetPlaceSlotReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_place_slots_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaceSlotReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaceSlotReply) ProtoMessage() {}

func (x *GetPlaceSlotReply) ProtoReflect() protoreflect.Message {
	mi := &file_place_slots_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaceSlotReply.ProtoReflect.Descriptor instead.
func (*GetPlaceSlotReply) Descriptor() ([]byte, []int) {
	return file_place_slots_proto_rawDescGZIP(), []int{1}
}

func (x *GetPlaceSlotReply) GetPlaceSlot() *PlaceSlot {
	if x != nil {
		return x.PlaceSlot
	}
	return nil
}

type UpdatePlaceSlotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	JWT  string `protobuf:"bytes,3,opt,name=JWT,proto3" json:"JWT,omitempty"`
}

func (x *UpdatePlaceSlotRequest) Reset() {
	*x = UpdatePlaceSlotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_place_slots_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlaceSlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlaceSlotRequest) ProtoMessage() {}

func (x *UpdatePlaceSlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_place_slots_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlaceSlotRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlaceSlotRequest) Descriptor() ([]byte, []int) {
	return file_place_slots_proto_rawDescGZIP(), []int{2}
}

func (x *UpdatePlaceSlotRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePlaceSlotRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePlaceSlotRequest) GetJWT() string {
	if x != nil {
		return x.JWT
	}
	return ""
}

var File_place_slots_proto protoreflect.FileDescriptor

var file_place_slots_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73,
	0x1a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4a, 0x57, 0x54, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x4a, 0x57, 0x54, 0x22, 0x43, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x6c, 0x6f, 0x74,
	0x52, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x22, 0x4e, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4a, 0x57, 0x54,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4a, 0x57, 0x54, 0x32, 0xaf, 0x01, 0x0a, 0x0c,
	0x56, 0x31, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x52, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x20, 0x2e, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x4b, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x53,
	0x6c, 0x6f, 0x74, 0x12, 0x23, 0x2e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x10, 0x5a,
	0x0e, 0x2e, 0x3b, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_place_slots_proto_rawDescOnce sync.Once
	file_place_slots_proto_rawDescData = file_place_slots_proto_rawDesc
)

func file_place_slots_proto_rawDescGZIP() []byte {
	file_place_slots_proto_rawDescOnce.Do(func() {
		file_place_slots_proto_rawDescData = protoimpl.X.CompressGZIP(file_place_slots_proto_rawDescData)
	})
	return file_place_slots_proto_rawDescData
}

var file_place_slots_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_place_slots_proto_goTypes = []interface{}{
	(*GetPlaceSlotRequest)(nil),    // 0: place_slots.GetPlaceSlotRequest
	(*GetPlaceSlotReply)(nil),      // 1: place_slots.GetPlaceSlotReply
	(*UpdatePlaceSlotRequest)(nil), // 2: place_slots.UpdatePlaceSlotRequest
	(*PlaceSlot)(nil),              // 3: types.PlaceSlot
	(*EmptyReply)(nil),             // 4: types.EmptyReply
}
var file_place_slots_proto_depIdxs = []int32{
	3, // 0: place_slots.GetPlaceSlotReply.placeSlot:type_name -> types.PlaceSlot
	0, // 1: place_slots.V1PlaceSlots.GetPlaceSlot:input_type -> place_slots.GetPlaceSlotRequest
	2, // 2: place_slots.V1PlaceSlots.UpdatePlaceSlot:input_type -> place_slots.UpdatePlaceSlotRequest
	1, // 3: place_slots.V1PlaceSlots.GetPlaceSlot:output_type -> place_slots.GetPlaceSlotReply
	4, // 4: place_slots.V1PlaceSlots.UpdatePlaceSlot:output_type -> types.EmptyReply
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_place_slots_proto_init() }
func file_place_slots_proto_init() {
	if File_place_slots_proto != nil {
		return
	}
	file_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_place_slots_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaceSlotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_place_slots_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaceSlotReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_place_slots_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlaceSlotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_place_slots_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_place_slots_proto_goTypes,
		DependencyIndexes: file_place_slots_proto_depIdxs,
		MessageInfos:      file_place_slots_proto_msgTypes,
	}.Build()
	File_place_slots_proto = out.File
	file_place_slots_proto_rawDesc = nil
	file_place_slots_proto_goTypes = nil
	file_place_slots_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// V1PlaceSlotsClient is the client API for V1PlaceSlots service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type V1PlaceSlotsClient interface {
	GetPlaceSlot(ctx context.Context, in *GetPlaceSlotRequest, opts ...grpc.CallOption) (*GetPlaceSlotReply, error)
	UpdatePlaceSlot(ctx context.Context, in *UpdatePlaceSlotRequest, opts ...grpc.CallOption) (*EmptyReply, error)
}

type v1PlaceSlotsClient struct {
	cc grpc.ClientConnInterface
}

func NewV1PlaceSlotsClient(cc grpc.ClientConnInterface) V1PlaceSlotsClient {
	return &v1PlaceSlotsClient{cc}
}

func (c *v1PlaceSlotsClient) GetPlaceSlot(ctx context.Context, in *GetPlaceSlotRequest, opts ...grpc.CallOption) (*GetPlaceSlotReply, error) {
	out := new(GetPlaceSlotReply)
	err := c.cc.Invoke(ctx, "/place_slots.V1PlaceSlots/GetPlaceSlot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v1PlaceSlotsClient) UpdatePlaceSlot(ctx context.Context, in *UpdatePlaceSlotRequest, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/place_slots.V1PlaceSlots/UpdatePlaceSlot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// V1PlaceSlotsServer is the server API for V1PlaceSlots service.
type V1PlaceSlotsServer interface {
	GetPlaceSlot(context.Context, *GetPlaceSlotRequest) (*GetPlaceSlotReply, error)
	UpdatePlaceSlot(context.Context, *UpdatePlaceSlotRequest) (*EmptyReply, error)
}

// UnimplementedV1PlaceSlotsServer can be embedded to have forward compatible implementations.
type UnimplementedV1PlaceSlotsServer struct {
}

func (*UnimplementedV1PlaceSlotsServer) GetPlaceSlot(context.Context, *GetPlaceSlotRequest) (*GetPlaceSlotReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlaceSlot not implemented")
}
func (*UnimplementedV1PlaceSlotsServer) UpdatePlaceSlot(context.Context, *UpdatePlaceSlotRequest) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePlaceSlot not implemented")
}

func RegisterV1PlaceSlotsServer(s *grpc.Server, srv V1PlaceSlotsServer) {
	s.RegisterService(&_V1PlaceSlots_serviceDesc, srv)
}

func _V1PlaceSlots_GetPlaceSlot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlaceSlotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V1PlaceSlotsServer).GetPlaceSlot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/place_slots.V1PlaceSlots/GetPlaceSlot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V1PlaceSlotsServer).GetPlaceSlot(ctx, req.(*GetPlaceSlotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V1PlaceSlots_UpdatePlaceSlot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePlaceSlotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V1PlaceSlotsServer).UpdatePlaceSlot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/place_slots.V1PlaceSlots/UpdatePlaceSlot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V1PlaceSlotsServer).UpdatePlaceSlot(ctx, req.(*UpdatePlaceSlotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _V1PlaceSlots_serviceDesc = grpc.ServiceDesc{
	ServiceName: "place_slots.V1PlaceSlots",
	HandlerType: (*V1PlaceSlotsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPlaceSlot",
			Handler:    _V1PlaceSlots_GetPlaceSlot_Handler,
		},
		{
			MethodName: "UpdatePlaceSlot",
			Handler:    _V1PlaceSlots_UpdatePlaceSlot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "place_slots.proto",
}
