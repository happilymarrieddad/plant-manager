// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: users.proto

package plantmanager

import (
	fmt "fmt"
	math "math"
	proto "github.com/gogo/protobuf/proto"
	context "context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type V1UsersMock struct{}

func (m *V1UsersMock) Login(ctx context.Context, req *LoginRequest) (*LoginReply, error) {
	res :=
		&LoginReply{
			Token: "rerum",
			Permissions: []*Permission{
				&Permission{
					Id:     287,
					Name:   "non",
					UserId: 274,
				},
				&Permission{
					Id:     786,
					Name:   "quis",
					UserId: 226,
				},
				&Permission{
					Id:     618,
					Name:   "vitae",
					UserId: 804,
				},
				&Permission{
					Id:     816,
					Name:   "itaque",
					UserId: 651,
				},
				&Permission{
					Id:     683,
					Name:   "et",
					UserId: 622,
				},
				&Permission{
					Id:     818,
					Name:   "dolores",
					UserId: 220,
				},
				&Permission{
					Id:     391,
					Name:   "earum",
					UserId: 864,
				},
				&Permission{
					Id:     42,
					Name:   "omnis",
					UserId: 136,
				},
			},
		}
	return res, nil
}
func (m *V1UsersMock) VerifyJWT(ctx context.Context, req *VerifyJWTRequest) (*VerifyJWTReply, error) {
	res :=
		&VerifyJWTReply{
			Valid:         false,
			HasPermission: true,
			Permissions: []*Permission{
				&Permission{
					Id:     523,
					Name:   "fuga",
					UserId: 405,
				},
				&Permission{
					Id:     819,
					Name:   "aut",
					UserId: 178,
				},
				&Permission{
					Id:     775,
					Name:   "doloribus",
					UserId: 226,
				},
				&Permission{
					Id:     348,
					Name:   "libero",
					UserId: 695,
				},
				&Permission{
					Id:     868,
					Name:   "atque",
					UserId: 462,
				},
				&Permission{
					Id:     694,
					Name:   "sit",
					UserId: 878,
				},
				&Permission{
					Id:     508,
					Name:   "illum",
					UserId: 739,
				},
				&Permission{
					Id:     717,
					Name:   "at",
					UserId: 926,
				},
			},
		}
	return res, nil
}
func (m *V1UsersMock) AddUser(ctx context.Context, req *AddUserRequest) (*AddUserReply, error) {
	res :=
		&AddUserReply{
			User: &User{
				Id:         951,
				FirstName:  "aut",
				LastName:   "eum",
				Email:      "AlbertBanks@Livefish.com",
				CustomerId: 880,
			},
		}
	return res, nil
}
func (m *V1UsersMock) GetUser(ctx context.Context, req *GetUserRequest) (*GetUserReply, error) {
	res :=
		&GetUserReply{
			User: &User{
				Id:         361,
				FirstName:  "non",
				LastName:   "natus",
				Email:      "SamuelBowman@Trudeo.com",
				CustomerId: 786,
			},
		}
	return res, nil
}
func (m *V1UsersMock) FindUsers(ctx context.Context, req *FindUsersRequest) (*FindUsersReply, error) {
	res :=
		&FindUsersReply{
			Users: []*User{
				&User{
					Id:         517,
					FirstName:  "unde",
					LastName:   "qui",
					Email:      "EricMontgomery@LiveZ.info",
					CustomerId: 726,
				},
				&User{
					Id:         875,
					FirstName:  "aliquid",
					LastName:   "qui",
					Email:      "aliquam@Photobug.org",
					CustomerId: 733,
				},
				&User{
					Id:         587,
					FirstName:  "et",
					LastName:   "dolorem",
					Email:      "bPorter@Digitube.edu",
					CustomerId: 547,
				},
				&User{
					Id:         734,
					FirstName:  "est",
					LastName:   "et",
					Email:      "MarilynHoward@Skippad.gov",
					CustomerId: 867,
				},
				&User{
					Id:         526,
					FirstName:  "odio",
					LastName:   "voluptatum",
					Email:      "rBradley@Gigaclub.net",
					CustomerId: 498,
				},
				&User{
					Id:         20,
					FirstName:  "libero",
					LastName:   "ea",
					Email:      "autem_vel@Ntags.biz",
					CustomerId: 944,
				},
				&User{
					Id:         798,
					FirstName:  "voluptas",
					LastName:   "expedita",
					Email:      "6Robertson@Trilith.mil",
					CustomerId: 392,
				},
				&User{
					Id:         846,
					FirstName:  "maxime",
					LastName:   "officia",
					Email:      "yMills@Vipe.net",
					CustomerId: 704,
				},
			},
		}
	return res, nil
}
