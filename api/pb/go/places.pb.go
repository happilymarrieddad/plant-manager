// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: places.proto

package plantmanager

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetPlaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	JWT string `protobuf:"bytes,2,opt,name=JWT,proto3" json:"JWT,omitempty"`
}

func (x *GetPlaceRequest) Reset() {
	*x = GetPlaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_places_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaceRequest) ProtoMessage() {}

func (x *GetPlaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_places_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaceRequest.ProtoReflect.Descriptor instead.
func (*GetPlaceRequest) Descriptor() ([]byte, []int) {
	return file_places_proto_rawDescGZIP(), []int{0}
}

func (x *GetPlaceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetPlaceRequest) GetJWT() string {
	if x != nil {
		return x.JWT
	}
	return ""
}

type GetPlaceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Place *Place `protobuf:"bytes,1,opt,name=place,proto3" json:"place,omitempty"`
}

func (x *GetPlaceReply) Reset() {
	*x = GetPlaceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_places_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaceReply) ProtoMessage() {}

func (x *GetPlaceReply) ProtoReflect() protoreflect.Message {
	mi := &file_places_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaceReply.ProtoReflect.Descriptor instead.
func (*GetPlaceReply) Descriptor() ([]byte, []int) {
	return file_places_proto_rawDescGZIP(), []int{1}
}

func (x *GetPlaceReply) GetPlace() *Place {
	if x != nil {
		return x.Place
	}
	return nil
}

type FindPlacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	JWT    string `protobuf:"bytes,3,opt,name=JWT,proto3" json:"JWT,omitempty"`
}

func (x *FindPlacesRequest) Reset() {
	*x = FindPlacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_places_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPlacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPlacesRequest) ProtoMessage() {}

func (x *FindPlacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_places_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPlacesRequest.ProtoReflect.Descriptor instead.
func (*FindPlacesRequest) Descriptor() ([]byte, []int) {
	return file_places_proto_rawDescGZIP(), []int{2}
}

func (x *FindPlacesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindPlacesRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FindPlacesRequest) GetJWT() string {
	if x != nil {
		return x.JWT
	}
	return ""
}

type FindPlacesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Places []*Place `protobuf:"bytes,1,rep,name=places,proto3" json:"places,omitempty"`
}

func (x *FindPlacesReply) Reset() {
	*x = FindPlacesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_places_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPlacesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPlacesReply) ProtoMessage() {}

func (x *FindPlacesReply) ProtoReflect() protoreflect.Message {
	mi := &file_places_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPlacesReply.ProtoReflect.Descriptor instead.
func (*FindPlacesReply) Descriptor() ([]byte, []int) {
	return file_places_proto_rawDescGZIP(), []int{3}
}

func (x *FindPlacesReply) GetPlaces() []*Place {
	if x != nil {
		return x.Places
	}
	return nil
}

type CreatePlaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Rows    int64  `protobuf:"varint,2,opt,name=rows,proto3" json:"rows,omitempty"`
	Columns int64  `protobuf:"varint,3,opt,name=columns,proto3" json:"columns,omitempty"`
	JWT     string `protobuf:"bytes,4,opt,name=JWT,proto3" json:"JWT,omitempty"`
}

func (x *CreatePlaceRequest) Reset() {
	*x = CreatePlaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_places_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaceRequest) ProtoMessage() {}

func (x *CreatePlaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_places_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaceRequest.ProtoReflect.Descriptor instead.
func (*CreatePlaceRequest) Descriptor() ([]byte, []int) {
	return file_places_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePlaceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePlaceRequest) GetRows() int64 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *CreatePlaceRequest) GetColumns() int64 {
	if x != nil {
		return x.Columns
	}
	return 0
}

func (x *CreatePlaceRequest) GetJWT() string {
	if x != nil {
		return x.JWT
	}
	return ""
}

type CreatePlaceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Place *Place `protobuf:"bytes,1,opt,name=place,proto3" json:"place,omitempty"`
}

func (x *CreatePlaceReply) Reset() {
	*x = CreatePlaceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_places_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlaceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaceReply) ProtoMessage() {}

func (x *CreatePlaceReply) ProtoReflect() protoreflect.Message {
	mi := &file_places_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaceReply.ProtoReflect.Descriptor instead.
func (*CreatePlaceReply) Descriptor() ([]byte, []int) {
	return file_places_proto_rawDescGZIP(), []int{5}
}

func (x *CreatePlaceReply) GetPlace() *Place {
	if x != nil {
		return x.Place
	}
	return nil
}

type DestroyPlaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	JWT string `protobuf:"bytes,2,opt,name=JWT,proto3" json:"JWT,omitempty"`
}

func (x *DestroyPlaceRequest) Reset() {
	*x = DestroyPlaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_places_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyPlaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyPlaceRequest) ProtoMessage() {}

func (x *DestroyPlaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_places_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyPlaceRequest.ProtoReflect.Descriptor instead.
func (*DestroyPlaceRequest) Descriptor() ([]byte, []int) {
	return file_places_proto_rawDescGZIP(), []int{6}
}

func (x *DestroyPlaceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DestroyPlaceRequest) GetJWT() string {
	if x != nil {
		return x.JWT
	}
	return ""
}

type UpdatePlaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	JWT  string `protobuf:"bytes,3,opt,name=JWT,proto3" json:"JWT,omitempty"`
}

func (x *UpdatePlaceRequest) Reset() {
	*x = UpdatePlaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_places_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlaceRequest) ProtoMessage() {}

func (x *UpdatePlaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_places_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlaceRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlaceRequest) Descriptor() ([]byte, []int) {
	return file_places_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePlaceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePlaceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePlaceRequest) GetJWT() string {
	if x != nil {
		return x.JWT
	}
	return ""
}

var File_places_proto protoreflect.FileDescriptor

var file_places_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x1a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4a, 0x57, 0x54, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x4a, 0x57, 0x54, 0x22, 0x33, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x22, 0x53, 0x0a,
	0x11, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x4a, 0x57, 0x54, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4a,
	0x57, 0x54, 0x22, 0x37, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x22, 0x68, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4a, 0x57, 0x54, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4a, 0x57, 0x54, 0x22, 0x36, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x22, 0x37, 0x0a,
	0x13, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4a, 0x57, 0x54, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x4a, 0x57, 0x54, 0x22, 0x4a, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x4a, 0x57, 0x54, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4a,
	0x57, 0x54, 0x32, 0xd5, 0x02, 0x0a, 0x08, 0x56, 0x31, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12,
	0x3c, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x0a, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x45, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x12, 0x1a, 0x2e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x73, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x3b,
	0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_places_proto_rawDescOnce sync.Once
	file_places_proto_rawDescData = file_places_proto_rawDesc
)

func file_places_proto_rawDescGZIP() []byte {
	file_places_proto_rawDescOnce.Do(func() {
		file_places_proto_rawDescData = protoimpl.X.CompressGZIP(file_places_proto_rawDescData)
	})
	return file_places_proto_rawDescData
}

var file_places_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_places_proto_goTypes = []interface{}{
	(*GetPlaceRequest)(nil),     // 0: places.GetPlaceRequest
	(*GetPlaceReply)(nil),       // 1: places.GetPlaceReply
	(*FindPlacesRequest)(nil),   // 2: places.FindPlacesRequest
	(*FindPlacesReply)(nil),     // 3: places.FindPlacesReply
	(*CreatePlaceRequest)(nil),  // 4: places.CreatePlaceRequest
	(*CreatePlaceReply)(nil),    // 5: places.CreatePlaceReply
	(*DestroyPlaceRequest)(nil), // 6: places.DestroyPlaceRequest
	(*UpdatePlaceRequest)(nil),  // 7: places.UpdatePlaceRequest
	(*Place)(nil),               // 8: types.Place
	(*EmptyReply)(nil),          // 9: types.EmptyReply
}
var file_places_proto_depIdxs = []int32{
	8, // 0: places.GetPlaceReply.place:type_name -> types.Place
	8, // 1: places.FindPlacesReply.places:type_name -> types.Place
	8, // 2: places.CreatePlaceReply.place:type_name -> types.Place
	0, // 3: places.V1Places.GetPlace:input_type -> places.GetPlaceRequest
	2, // 4: places.V1Places.FindPlaces:input_type -> places.FindPlacesRequest
	4, // 5: places.V1Places.CreatePlace:input_type -> places.CreatePlaceRequest
	7, // 6: places.V1Places.UpdatePlace:input_type -> places.UpdatePlaceRequest
	6, // 7: places.V1Places.DestroyPlace:input_type -> places.DestroyPlaceRequest
	1, // 8: places.V1Places.GetPlace:output_type -> places.GetPlaceReply
	3, // 9: places.V1Places.FindPlaces:output_type -> places.FindPlacesReply
	5, // 10: places.V1Places.CreatePlace:output_type -> places.CreatePlaceReply
	9, // 11: places.V1Places.UpdatePlace:output_type -> types.EmptyReply
	9, // 12: places.V1Places.DestroyPlace:output_type -> types.EmptyReply
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_places_proto_init() }
func file_places_proto_init() {
	if File_places_proto != nil {
		return
	}
	file_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_places_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_places_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_places_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPlacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_places_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPlacesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_places_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_places_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlaceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_places_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyPlaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_places_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_places_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_places_proto_goTypes,
		DependencyIndexes: file_places_proto_depIdxs,
		MessageInfos:      file_places_proto_msgTypes,
	}.Build()
	File_places_proto = out.File
	file_places_proto_rawDesc = nil
	file_places_proto_goTypes = nil
	file_places_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// V1PlacesClient is the client API for V1Places service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type V1PlacesClient interface {
	GetPlace(ctx context.Context, in *GetPlaceRequest, opts ...grpc.CallOption) (*GetPlaceReply, error)
	FindPlaces(ctx context.Context, in *FindPlacesRequest, opts ...grpc.CallOption) (*FindPlacesReply, error)
	CreatePlace(ctx context.Context, in *CreatePlaceRequest, opts ...grpc.CallOption) (*CreatePlaceReply, error)
	UpdatePlace(ctx context.Context, in *UpdatePlaceRequest, opts ...grpc.CallOption) (*EmptyReply, error)
	DestroyPlace(ctx context.Context, in *DestroyPlaceRequest, opts ...grpc.CallOption) (*EmptyReply, error)
}

type v1PlacesClient struct {
	cc grpc.ClientConnInterface
}

func NewV1PlacesClient(cc grpc.ClientConnInterface) V1PlacesClient {
	return &v1PlacesClient{cc}
}

func (c *v1PlacesClient) GetPlace(ctx context.Context, in *GetPlaceRequest, opts ...grpc.CallOption) (*GetPlaceReply, error) {
	out := new(GetPlaceReply)
	err := c.cc.Invoke(ctx, "/places.V1Places/GetPlace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v1PlacesClient) FindPlaces(ctx context.Context, in *FindPlacesRequest, opts ...grpc.CallOption) (*FindPlacesReply, error) {
	out := new(FindPlacesReply)
	err := c.cc.Invoke(ctx, "/places.V1Places/FindPlaces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v1PlacesClient) CreatePlace(ctx context.Context, in *CreatePlaceRequest, opts ...grpc.CallOption) (*CreatePlaceReply, error) {
	out := new(CreatePlaceReply)
	err := c.cc.Invoke(ctx, "/places.V1Places/CreatePlace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v1PlacesClient) UpdatePlace(ctx context.Context, in *UpdatePlaceRequest, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/places.V1Places/UpdatePlace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *v1PlacesClient) DestroyPlace(ctx context.Context, in *DestroyPlaceRequest, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/places.V1Places/DestroyPlace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// V1PlacesServer is the server API for V1Places service.
type V1PlacesServer interface {
	GetPlace(context.Context, *GetPlaceRequest) (*GetPlaceReply, error)
	FindPlaces(context.Context, *FindPlacesRequest) (*FindPlacesReply, error)
	CreatePlace(context.Context, *CreatePlaceRequest) (*CreatePlaceReply, error)
	UpdatePlace(context.Context, *UpdatePlaceRequest) (*EmptyReply, error)
	DestroyPlace(context.Context, *DestroyPlaceRequest) (*EmptyReply, error)
}

// UnimplementedV1PlacesServer can be embedded to have forward compatible implementations.
type UnimplementedV1PlacesServer struct {
}

func (*UnimplementedV1PlacesServer) GetPlace(context.Context, *GetPlaceRequest) (*GetPlaceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlace not implemented")
}
func (*UnimplementedV1PlacesServer) FindPlaces(context.Context, *FindPlacesRequest) (*FindPlacesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindPlaces not implemented")
}
func (*UnimplementedV1PlacesServer) CreatePlace(context.Context, *CreatePlaceRequest) (*CreatePlaceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePlace not implemented")
}
func (*UnimplementedV1PlacesServer) UpdatePlace(context.Context, *UpdatePlaceRequest) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePlace not implemented")
}
func (*UnimplementedV1PlacesServer) DestroyPlace(context.Context, *DestroyPlaceRequest) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyPlace not implemented")
}

func RegisterV1PlacesServer(s *grpc.Server, srv V1PlacesServer) {
	s.RegisterService(&_V1Places_serviceDesc, srv)
}

func _V1Places_GetPlace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V1PlacesServer).GetPlace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/places.V1Places/GetPlace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V1PlacesServer).GetPlace(ctx, req.(*GetPlaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V1Places_FindPlaces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindPlacesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V1PlacesServer).FindPlaces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/places.V1Places/FindPlaces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V1PlacesServer).FindPlaces(ctx, req.(*FindPlacesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V1Places_CreatePlace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePlaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V1PlacesServer).CreatePlace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/places.V1Places/CreatePlace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V1PlacesServer).CreatePlace(ctx, req.(*CreatePlaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V1Places_UpdatePlace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePlaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V1PlacesServer).UpdatePlace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/places.V1Places/UpdatePlace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V1PlacesServer).UpdatePlace(ctx, req.(*UpdatePlaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _V1Places_DestroyPlace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyPlaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(V1PlacesServer).DestroyPlace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/places.V1Places/DestroyPlace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(V1PlacesServer).DestroyPlace(ctx, req.(*DestroyPlaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _V1Places_serviceDesc = grpc.ServiceDesc{
	ServiceName: "places.V1Places",
	HandlerType: (*V1PlacesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPlace",
			Handler:    _V1Places_GetPlace_Handler,
		},
		{
			MethodName: "FindPlaces",
			Handler:    _V1Places_FindPlaces_Handler,
		},
		{
			MethodName: "CreatePlace",
			Handler:    _V1Places_CreatePlace_Handler,
		},
		{
			MethodName: "UpdatePlace",
			Handler:    _V1Places_UpdatePlace_Handler,
		},
		{
			MethodName: "DestroyPlace",
			Handler:    _V1Places_DestroyPlace_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "places.proto",
}
